{"version":3,"sources":["TabBar.tsx","index.tsx"],"names":["TabBar","_StreamlitComponentBa","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","numClicks","selectedId","list","MenuItem","_ref","item","React","createElement","className","concat","id","title","style","fontWeight","fontStyle","description","Arrow","_ref2","text","ArrowLeft","ArrowRight","render","ScrollMenu","alignCenter","data","Menu","arrowLeft","arrowRight","wheel","scrollToSelected","selected","onSelect","setState","Streamlit","setComponentValue","args","_createClass","key","value","_this2","map","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"wOAmBMA,EAAM,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAGV,SAAAA,EAAYK,GAA6B,IAADC,EAGe,OAHfC,YAAA,KAAAP,IACtCM,EAAAH,EAAAK,KAAA,KAAMH,IAHDI,MAAQ,CAAEC,UAAW,EAAGC,WAAY,EAAGC,KAAM,IAAIN,EAQxDO,SAAW,SAAAC,GAAmE,IAAhEC,EAAID,EAAJC,KAAMJ,EAAUG,EAAVH,WAElB,OACEK,IAAAC,cAAA,OAAKC,UAAS,aAAAC,OAAeR,IAAeI,EAAKK,GAAK,SAAW,KAC/DJ,IAAAC,cAAA,WAAMF,EAAKM,OACXL,IAAAC,cAAA,OAAKK,MAAO,CAAEC,WAAY,SAAUC,UAAW,WAC5CT,EAAKU,eAIbnB,EAODoB,MAAQ,SAAAC,GAA+D,IAA5DC,EAAID,EAAJC,KAAMV,EAASS,EAATT,UACf,OAAOF,IAAAC,cAAA,OAAKC,UAAWA,GAAYU,IACpCtB,EAEDuB,UAAYvB,EAAKoB,MAAM,CAAEE,KAAM,IAAKV,UAAW,eAAeZ,EAC9DwB,WAAaxB,EAAKoB,MAAM,CAAEE,KAAM,IAAKV,UAAW,eAAeZ,EAExDyB,OAAS,WACd,OACEf,IAAAC,cAAA,WACED,IAAAC,cAACe,IAAU,CACTC,aAAa,EACbC,KAAM5B,EAAK6B,KAAK7B,EAAKG,MAAMG,KAAMN,EAAKG,MAAME,YAC5CyB,UAAW9B,EAAKuB,UAChBQ,WAAY/B,EAAKwB,WACjBQ,OAAO,EACPC,kBAAkB,EAClBC,SAAQ,GAAArB,OAAKb,EAAKG,MAAME,YACxB8B,SAAUnC,EAAKmC,aAItBnC,EAEDmC,SAAW,SAACrB,GACVd,EAAKoC,UACH,SAACjC,EAAOJ,GACN,MAAO,CAAEM,WAAYS,MAEvB,kBAAMuB,IAAUC,kBAAkBxB,OAlDpCd,EAAKG,MAAMG,KAAON,EAAKD,MAAMwC,KAAW,KACxCvC,EAAKG,MAAME,WAAaL,EAAKD,MAAMwC,KAAiB,WAACvC,EAmBtD,OAlBAwC,YAAA9C,EAAA,EAAA+C,IAAA,OAAAC,MAcD,SAAKpC,EAAuBD,GAAqB,IAADsC,EAAA,KAC9C,OAAOrC,EAAKsC,KAAI,SAACnC,GAAI,OACnBC,IAAAC,cAACgC,EAAKpC,SAAQ,CAACE,KAAMA,EAAMJ,WAAYA,EAAYoC,IAAKhC,EAAKK,YAEhEpB,EAzBS,CAASmD,KA4DNC,cAAwBpD,GC3EvCqD,IAAStB,OACPf,IAAAC,cAACD,IAAMsC,WAAU,KACftC,IAAAC,cAACjB,EAAM,OAETuD,SAASC,eAAe,W","file":"static/js/main.3b5b5272.chunk.js","sourcesContent":["import React, { ComponentProps, ReactNode } from \"react\"\nimport ScrollMenu from \"react-horizontal-scrolling-menu\"\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection\n} from \"streamlit-component-lib\"\n\ninterface State {\n  numClicks: number\n  selectedId: number\n}\n\ninterface MenuItem {\n  id: number\n  title: string\n  description: string\n}\n\nclass TabBar extends StreamlitComponentBase<State> {\n  public state = { numClicks: 0, selectedId: 1, list: [] }\n\n  constructor(props: ComponentProps<any>) {\n    super(props)\n    this.state.list = this.props.args[\"data\"]\n    this.state.selectedId = this.props.args[\"selectedId\"]\n  }\n\n  MenuItem = ({ item, selectedId }: { item: MenuItem; selectedId: number }) => {\n\n    return (\n      <div className={`menu-item ${selectedId === item.id ? \"active\" : \"\"}`}>\n        <div>{item.title}</div>\n        <div style={{ fontWeight: \"normal\", fontStyle: \"italic\" }}>\n          {item.description}\n        </div>\n      </div>\n    )\n  }\n\n  Menu(list: Array<MenuItem>, selectedId: number) {\n    return list.map((item) => (\n      <this.MenuItem item={item} selectedId={selectedId} key={item.id} />\n    ))\n  }\n  Arrow = ({ text, className }: { text: string; className: string }) => {\n    return <div className={className}>{text}</div>\n  }\n\n  ArrowLeft = this.Arrow({ text: \"<\", className: \"arrow-prev\" })\n  ArrowRight = this.Arrow({ text: \">\", className: \"arrow-next\" })\n\n  public render = (): ReactNode => {\n    return (\n      <div>\n        <ScrollMenu\n          alignCenter={false}\n          data={this.Menu(this.state.list, this.state.selectedId)}\n          arrowLeft={this.ArrowLeft}\n          arrowRight={this.ArrowRight}\n          wheel={true}\n          scrollToSelected={true}\n          selected={`${this.state.selectedId}`}\n          onSelect={this.onSelect}\n        />\n      </div>\n    )\n  }\n\n  onSelect = (id: any) => {\n    this.setState(\n      (state, props) => {\n        return { selectedId: id }\n      },\n      () => Streamlit.setComponentValue(id)\n    )\n  }\n}\n\nexport default withStreamlitConnection(TabBar)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TabBar from \"./TabBar\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <TabBar />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}